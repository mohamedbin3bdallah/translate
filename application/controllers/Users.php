<?phpdefined('BASEPATH') OR exit('No direct script access allowed');class Users extends CI_Controller {	/**	 * Index Page for this controller.	 *	 * Maps to the following URL	 * 		http://example.com/index.php/welcome	 *	- or -	 * 		http://example.com/index.php/welcome/index	 *	- or -	 * Since this controller is set as the default controller in	 * config/routes.php, it's displayed at http://example.com/	 *	 * So any other public methods not prefixed with an underscore will	 * map to /index.php/welcome/<method_name>	 * @see http://codeigniter.com/user_guide/general/urls.html	 */	function __construct()    {		parent::__construct();		$this->mysystem = $this->Admin_mo->getrow('system',array('id'=>'1'));	    if(!$this->session->userdata('uid'))	    { 			redirect('home');	    }		else		{			$this->loginuser = $this->Admin_mo->getrowjoinLeftLimit('users.*,usertypes.privileges as privileges,langs.dir as dir','users',array('usertypes'=>'users.utid=usertypes.id','langs'=>'users.lang=langs.code'),array('users.id'=>$this->session->userdata('uid')),'');			$this->sections = array();			$sections = $this->Admin_mo->getwhere('sections',array('active'=>'1'));			if(!empty($sections))			{				foreach($sections as $section) { $this->sections[$section->id] = $section->code; }			}		}	}	public function index()	{		if(strpos($this->loginuser->privileges, ',usee,') !== false && in_array('U',$this->sections))		{		$data['admessage'] = '';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$employees = $this->Admin_mo->get('users'); foreach($employees as $employee) { $data['employees'][$employee->id] = $employee->username; }		$data['preporders'] = $this->Admin_mo->getjoinLeft('users.*,usertypes.title as usertype_title,langs.title as language_title','users',array('usertypes'=>'users.utid = usertypes.id','langs'=>'users.lang = langs.code'),'users.utid IN (1,2,3) and users.id != 1 and users.id != '.$this->session->userdata('uid'));		if(!empty($data['preporders']))		{			for($i=0;$i<count($data['preporders']);$i++)			{				//$data['orders'][$data['preporders'][$i]->oid] = new stdClass();				$data['users'][$data['preporders'][$i]->id]['id'] = $data['preporders'][$i]->id;				$data['users'][$data['preporders'][$i]->id]['name'] = $data['preporders'][$i]->fname.' '.$data['preporders'][$i]->lname;				$data['users'][$data['preporders'][$i]->id]['username'] = $data['preporders'][$i]->username;				$data['users'][$data['preporders'][$i]->id]['mobile'] = $data['preporders'][$i]->mobile;				$data['users'][$data['preporders'][$i]->id]['email'] = $data['preporders'][$i]->email;				$data['users'][$data['preporders'][$i]->id]['language_title'] = $data['preporders'][$i]->language_title;				$data['users'][$data['preporders'][$i]->id]['img'] = $data['preporders'][$i]->img;				$data['users'][$data['preporders'][$i]->id]['usertype_title'] = $data['preporders'][$i]->usertype_title;				$data['users'][$data['preporders'][$i]->id]['uid'] = $data['preporders'][$i]->uid;				$data['users'][$data['preporders'][$i]->id]['time'] = $data['preporders'][$i]->time;				$data['users'][$data['preporders'][$i]->id]['active'] = $data['preporders'][$i]->active;			}		}		//echo '<pre>'; print_r($data['users']); echo '</pre>';		$this->load->view('calenderdate');		$this->load->view('headers/users',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/users',$data);		$this->load->view('footers/users');		$this->load->view('messages');		}		else		{		$data['title'] = 'admins';		$data['admessage'] = 'youhavenoprivls';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$this->load->view('headers/users',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/messages',$data);		$this->load->view('footers/users');		$this->load->view('messages');		}	}		public function trainees()	{		if(strpos($this->loginuser->privileges, ',usee,') !== false && in_array('U',$this->sections))		{		$data['admessage'] = '';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$employees = $this->Admin_mo->get('users'); foreach($employees as $employee) { $data['employees'][$employee->id] = $employee->fname.' '.$employee->lname; }		$data['preporders'] = $this->Admin_mo->getjoinLeft('users.*,user_d.lang as language_title,user_d.nationality as nationality,user_d.six as six,user_d.univ as univ,user_d.grad_year as grad_year,user_d.specialty as specialty,user_d.cv as cv,course_orders.id as order_id,course_orders.time as order_time,courses.title as order_course,courses.code as order_course_code','users',array('user_d'=>'users.id = user_d.user','course_orders'=>'users.id = course_orders.user','courses'=>'course_orders.course = courses.id'),'users.utid IN (3) and users.id != '.$this->session->userdata('uid'));		if(!empty($data['preporders']))		{			for($i=0;$i<count($data['preporders']);$i++)			{				//$data['orders'][$data['preporders'][$i]->oid] = new stdClass();				$data['users'][$data['preporders'][$i]->id]['id'] = $data['preporders'][$i]->id;				$data['users'][$data['preporders'][$i]->id]['code'] = $data['preporders'][$i]->code;				$data['users'][$data['preporders'][$i]->id]['name'] = $data['preporders'][$i]->fname.' '.$data['preporders'][$i]->lname;				$data['users'][$data['preporders'][$i]->id]['username'] = $data['preporders'][$i]->username;				$data['users'][$data['preporders'][$i]->id]['mobile'] = $data['preporders'][$i]->mobile;				$data['users'][$data['preporders'][$i]->id]['email'] = $data['preporders'][$i]->email;				$data['users'][$data['preporders'][$i]->id]['language_title'] = $data['preporders'][$i]->language_title;				$data['users'][$data['preporders'][$i]->id]['img'] = $data['preporders'][$i]->img;				$data['users'][$data['preporders'][$i]->id]['uid'] = $data['preporders'][$i]->uid;				$data['users'][$data['preporders'][$i]->id]['time'] = $data['preporders'][$i]->time;				$data['users'][$data['preporders'][$i]->id]['active'] = $data['preporders'][$i]->active;								$data['users'][$data['preporders'][$i]->id]['nationality'] = $data['preporders'][$i]->nationality;				$data['users'][$data['preporders'][$i]->id]['six'] = $data['preporders'][$i]->six;				$data['users'][$data['preporders'][$i]->id]['univ'] = $data['preporders'][$i]->univ;				$data['users'][$data['preporders'][$i]->id]['grad_year'] = $data['preporders'][$i]->grad_year;				$data['users'][$data['preporders'][$i]->id]['specialty'] = $data['preporders'][$i]->specialty;				$data['users'][$data['preporders'][$i]->id]['cv'] = $data['preporders'][$i]->cv;								if($data['preporders'][$i]->order_id != '')				{					$data['users'][$data['preporders'][$i]->id]['items'][$i]['order_id'] = $data['preporders'][$i]->order_id;					$data['users'][$data['preporders'][$i]->id]['items'][$i]['order_course_code'] = $data['preporders'][$i]->order_course_code;					$data['users'][$data['preporders'][$i]->id]['items'][$i]['order_course'] = $data['preporders'][$i]->order_course;					$data['users'][$data['preporders'][$i]->id]['items'][$i]['order_time'] = $data['preporders'][$i]->order_time;				}			}		}		//echo '<pre>'; print_r($data['users']); echo '</pre>';		$this->load->view('calenderdate');		$this->load->view('headers/trainees',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/trainees',$data);		$this->load->view('footers/trainees');		$this->load->view('messages');		}		else		{		$data['title'] = 'trainees';		$data['admessage'] = 'youhavenoprivls';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$this->load->view('headers/trainees',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/messages',$data);		$this->load->view('footers/trainees');		$this->load->view('messages');		}	}		public function translators()	{		if(strpos($this->loginuser->privileges, ',usee,') !== false && in_array('U',$this->sections))		{		$data['admessage'] = '';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$employees = $this->Admin_mo->get('users'); foreach($employees as $employee) { $data['employees'][$employee->id] = $employee->fname.' '.$employee->lname; }		$data['preporders'] = $this->Admin_mo->getjoinLeft('users.*,companies.id as company_id,companies.title as company_title,companies.accept as company_accept,companies.time as company_time,user_d.lang as language_title,user_d.nationality as nationality,user_d.six as six,user_d.univ as univ,user_d.grad_year as grad_year,user_d.specialty as specialty,user_d.cv as cv,works.id as work_id,works.company as work_company,works.lang as work_lang,works.file as work_file,works.time as work_time,usertypes.title as usertype_title','users',array('usertypes'=>'users.utid = usertypes.id','works'=>'users.id = works.translator','user_d'=>'users.id = user_d.user','companies'=>'users.id = companies.translator'),'users.utid IN (4,6) and users.id != '.$this->session->userdata('uid'));		if(!empty($data['preporders']))		{			for($i=0;$i<count($data['preporders']);$i++)			{				//$data['orders'][$data['preporders'][$i]->oid] = new stdClass();				$data['users'][$data['preporders'][$i]->id]['id'] = $data['preporders'][$i]->id;				$data['users'][$data['preporders'][$i]->id]['code'] = $data['preporders'][$i]->code;				$data['users'][$data['preporders'][$i]->id]['name'] = $data['preporders'][$i]->fname.' '.$data['preporders'][$i]->lname;				$data['users'][$data['preporders'][$i]->id]['username'] = $data['preporders'][$i]->username;				$data['users'][$data['preporders'][$i]->id]['mobile'] = $data['preporders'][$i]->mobile;				$data['users'][$data['preporders'][$i]->id]['email'] = $data['preporders'][$i]->email;				$data['users'][$data['preporders'][$i]->id]['language_title'] = $data['preporders'][$i]->language_title;				$data['users'][$data['preporders'][$i]->id]['img'] = $data['preporders'][$i]->img;				$data['users'][$data['preporders'][$i]->id]['usertype_title'] = $data['preporders'][$i]->usertype_title;				$data['users'][$data['preporders'][$i]->id]['uid'] = $data['preporders'][$i]->uid;				$data['users'][$data['preporders'][$i]->id]['time'] = $data['preporders'][$i]->time;				$data['users'][$data['preporders'][$i]->id]['active'] = $data['preporders'][$i]->active;								$data['users'][$data['preporders'][$i]->id]['nationality'] = $data['preporders'][$i]->nationality;				$data['users'][$data['preporders'][$i]->id]['six'] = $data['preporders'][$i]->six;				$data['users'][$data['preporders'][$i]->id]['univ'] = $data['preporders'][$i]->univ;				$data['users'][$data['preporders'][$i]->id]['grad_year'] = $data['preporders'][$i]->grad_year;				$data['users'][$data['preporders'][$i]->id]['specialty'] = $data['preporders'][$i]->specialty;				$data['users'][$data['preporders'][$i]->id]['cv'] = $data['preporders'][$i]->cv;								if($data['preporders'][$i]->work_id != '')				{					$data['users'][$data['preporders'][$i]->id]['items'][$data['preporders'][$i]->work_id]['work_id'] = $data['preporders'][$i]->work_id;					$data['users'][$data['preporders'][$i]->id]['items'][$data['preporders'][$i]->work_id]['work_company'] = $data['preporders'][$i]->work_company;					$data['users'][$data['preporders'][$i]->id]['items'][$data['preporders'][$i]->work_id]['work_lang'] = $data['preporders'][$i]->work_lang;					$data['users'][$data['preporders'][$i]->id]['items'][$data['preporders'][$i]->work_id]['work_file'] = $data['preporders'][$i]->work_file;					$data['users'][$data['preporders'][$i]->id]['items'][$data['preporders'][$i]->work_id]['work_time'] = $data['preporders'][$i]->work_time;				}								if($data['preporders'][$i]->company_id != '' && $data['preporders'][$i]->company_accept == '1')				{					$data['users'][$data['preporders'][$i]->id]['companies'][$data['preporders'][$i]->company_id]['company_id'] = $data['preporders'][$i]->company_id;					$data['users'][$data['preporders'][$i]->id]['companies'][$data['preporders'][$i]->company_id]['company_title'] = $data['preporders'][$i]->company_title;					$data['users'][$data['preporders'][$i]->id]['companies'][$data['preporders'][$i]->company_id]['company_time'] = $data['preporders'][$i]->company_time;				}			}		}		//echo '<pre>'; print_r($data['users']); echo '</pre>';		$this->load->view('calenderdate');		$this->load->view('headers/translators',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/translators',$data);		$this->load->view('footers/translators');		$this->load->view('messages');		}		else		{		$data['title'] = 'translators';		$data['admessage'] = 'youhavenoprivls';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$this->load->view('headers/translators',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/messages',$data);		$this->load->view('footers/translators');		$this->load->view('messages');		}	}	public function companies()	{		if(strpos($this->loginuser->privileges, ',usee,') !== false && in_array('U',$this->sections))		{		$data['admessage'] = '';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$employees = $this->Admin_mo->get('users'); foreach($employees as $employee) { $data['employees'][$employee->id] = $employee->fname.' '.$employee->lname; }		//$realestates = $this->Admin_mo->get('realestates'); foreach($realestates as $realestate) { $data['realestates'][$realestate->id]['code'] = $realestate->code; $data['realestates'][$realestate->id]['title'] = $realestate->title; }		$trans = $this->Admin_mo->getjoinLeft('user_d.lang as lang,users.id as id,users.username as username','users',array('user_d'=>'users.id = user_d.user'),array('users.utid'=>4,'users.active'=>'1'));		if(!empty($trans)) { foreach($trans as $tran) { $data['translatoras'][$tran->lang][$tran->id] = $tran->username; } }		$data['preporders'] = $this->Admin_mo->getjoinLeft('users.*,companies.id as company_id,companies.title as company_title,companies.translator as company_translator,companies.accept as company_accept,langs.title as language_title','users',array('companies'=>'users.id = companies.user','langs'=>'users.lang = langs.code'),array('users.utid'=>5));		if(!empty($data['preporders']))		{			for($i=0;$i<count($data['preporders']);$i++)			{				//$data['orders'][$data['preporders'][$i]->oid] = new stdClass();				$data['users'][$data['preporders'][$i]->id]['id'] = $data['preporders'][$i]->id;				$data['users'][$data['preporders'][$i]->id]['code'] = $data['preporders'][$i]->code;				$data['users'][$data['preporders'][$i]->id]['name'] = $data['preporders'][$i]->fname.' '.$data['preporders'][$i]->lname;				$data['users'][$data['preporders'][$i]->id]['username'] = $data['preporders'][$i]->username;				$data['users'][$data['preporders'][$i]->id]['mobile'] = $data['preporders'][$i]->mobile;				$data['users'][$data['preporders'][$i]->id]['email'] = $data['preporders'][$i]->email;				$data['users'][$data['preporders'][$i]->id]['language_title'] = $data['preporders'][$i]->language_title;				$data['users'][$data['preporders'][$i]->id]['img'] = $data['preporders'][$i]->img;				$data['users'][$data['preporders'][$i]->id]['uid'] = $data['preporders'][$i]->uid;				$data['users'][$data['preporders'][$i]->id]['time'] = $data['preporders'][$i]->time;				$data['users'][$data['preporders'][$i]->id]['active'] = $data['preporders'][$i]->active;								$data['users'][$data['preporders'][$i]->id]['company_id'] = $data['preporders'][$i]->company_id;				$data['users'][$data['preporders'][$i]->id]['company_title'] = $data['preporders'][$i]->company_title;				$data['users'][$data['preporders'][$i]->id]['company_translator'] = $data['preporders'][$i]->company_translator;				$data['users'][$data['preporders'][$i]->id]['company_accept'] = $data['preporders'][$i]->company_accept;			}		}		//echo '<pre>'; print_r($data['users']); echo '</pre>';		$this->load->view('calenderdate');		$this->load->view('headers/companies',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/companies',$data);		$this->load->view('footers/companies');		$this->load->view('messages');		}		else		{		$data['title'] = 'companies';		$data['admessage'] = 'youhavenoprivls';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$this->load->view('headers/companies',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/messages',$data);		$this->load->view('footers/companies');		$this->load->view('messages');		}	}		public function translate_needers()	{		if(strpos($this->loginuser->privileges, ',usee,') !== false && in_array('U',$this->sections))		{		$data['admessage'] = '';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$employees = $this->Admin_mo->get('users'); foreach($employees as $employee) { $data['employees'][$employee->id] = $employee->fname.' '.$employee->lname; }		//$realestates = $this->Admin_mo->get('realestates'); foreach($realestates as $realestate) { $data['realestates'][$realestate->id]['code'] = $realestate->code; $data['realestates'][$realestate->id]['title'] = $realestate->title; }		$trans = $this->Admin_mo->getjoinLeft('user_d.lang as lang,users.id as id,users.username as username','users',array('user_d'=>'users.id = user_d.user'),'users.utid IN (4,6) and users.active = 1');		if(!empty($trans)) { foreach($trans as $tran) { $data['translatoras'][$tran->lang][$tran->id] = $tran->username; } }		$data['preporders'] = $this->Admin_mo->getjoinLeft('users.*,usertypes.title as usertype_title,langs.title as language_title,orders.id as order_id,orders.from as order_from,orders.lang as order_lang,orders.file as order_file,orders.price as order_price,orders.time as order_time,orders.accept as order_accept,works.id as work_id,works.translator as work_translator,works.lang as work_lang,works.file as work_file,works.price as work_price,works.time as work_time','users',array('usertypes'=>'users.utid = usertypes.id','langs'=>'users.lang = langs.code','orders'=>'users.id = orders.user','works'=>'users.id = works.company'),array('usertypes.id'=>7));		if(!empty($data['preporders']))		{			for($i=0;$i<count($data['preporders']);$i++)			{				//$data['orders'][$data['preporders'][$i]->oid] = new stdClass();				$data['users'][$data['preporders'][$i]->id]['id'] = $data['preporders'][$i]->id;				$data['users'][$data['preporders'][$i]->id]['code'] = $data['preporders'][$i]->code;				$data['users'][$data['preporders'][$i]->id]['name'] = $data['preporders'][$i]->fname.' '.$data['preporders'][$i]->lname;				$data['users'][$data['preporders'][$i]->id]['username'] = $data['preporders'][$i]->username;				$data['users'][$data['preporders'][$i]->id]['mobile'] = $data['preporders'][$i]->mobile;				$data['users'][$data['preporders'][$i]->id]['email'] = $data['preporders'][$i]->email;				$data['users'][$data['preporders'][$i]->id]['language_title'] = $data['preporders'][$i]->language_title;				$data['users'][$data['preporders'][$i]->id]['img'] = $data['preporders'][$i]->img;				$data['users'][$data['preporders'][$i]->id]['usertype_title'] = $data['preporders'][$i]->usertype_title;				$data['users'][$data['preporders'][$i]->id]['uid'] = $data['preporders'][$i]->uid;				$data['users'][$data['preporders'][$i]->id]['time'] = $data['preporders'][$i]->time;				$data['users'][$data['preporders'][$i]->id]['active'] = $data['preporders'][$i]->active;								if($data['preporders'][$i]->order_id != '')				{					$data['users'][$data['preporders'][$i]->id]['orders'][$data['preporders'][$i]->order_id]['order_id'] = $data['preporders'][$i]->order_id;					$data['users'][$data['preporders'][$i]->id]['orders'][$data['preporders'][$i]->order_id]['order_from'] = $data['preporders'][$i]->order_from;					$data['users'][$data['preporders'][$i]->id]['orders'][$data['preporders'][$i]->order_id]['order_lang'] = $data['preporders'][$i]->order_lang;					$data['users'][$data['preporders'][$i]->id]['orders'][$data['preporders'][$i]->order_id]['order_file'] = $data['preporders'][$i]->order_file;					$data['users'][$data['preporders'][$i]->id]['orders'][$data['preporders'][$i]->order_id]['order_price'] = $data['preporders'][$i]->order_price;					$data['users'][$data['preporders'][$i]->id]['orders'][$data['preporders'][$i]->order_id]['order_time'] = $data['preporders'][$i]->order_time;					$data['users'][$data['preporders'][$i]->id]['orders'][$data['preporders'][$i]->order_id]['order_accept'] = $data['preporders'][$i]->order_accept;				}								if($data['preporders'][$i]->work_id != '')				{					$data['users'][$data['preporders'][$i]->id]['works'][$data['preporders'][$i]->work_id]['work_id'] = $data['preporders'][$i]->work_id;					$data['users'][$data['preporders'][$i]->id]['works'][$data['preporders'][$i]->work_id]['work_translator'] = $data['preporders'][$i]->work_translator;					$data['users'][$data['preporders'][$i]->id]['works'][$data['preporders'][$i]->work_id]['work_lang'] = $data['preporders'][$i]->work_lang;					$data['users'][$data['preporders'][$i]->id]['works'][$data['preporders'][$i]->work_id]['work_file'] = $data['preporders'][$i]->work_file;					$data['users'][$data['preporders'][$i]->id]['works'][$data['preporders'][$i]->work_id]['work_price'] = $data['preporders'][$i]->work_price;					$data['users'][$data['preporders'][$i]->id]['works'][$data['preporders'][$i]->work_id]['work_time'] = $data['preporders'][$i]->work_time;				}			}		}		//echo '<pre>'; print_r($data['users']); echo '</pre>';		$this->load->view('calenderdate');		$this->load->view('headers/translate_needers',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/translate_needers',$data);		$this->load->view('footers/translate_needers');		$this->load->view('messages');		}		else		{		$data['title'] = 'translate_needers';		$data['admessage'] = 'youhavenoprivls';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$this->load->view('headers/translate_needers',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/messages',$data);		$this->load->view('footers/translate_needers');		$this->load->view('messages');		}	}	public function coupon($user_id)	{		if(strpos($this->loginuser->privileges, ',cpadd,') !== false && in_array('U',$this->sections))		{		$user_id = abs((int)($user_id));		if($user_id > 0)		{			$user = $this->Admin_mo->getrow('users',array('id'=>$user_id));			$user2 = $this->Admin_mo->getrow('users',array('id'=>$this->session->userdata('uid')));			if(!empty($user) && !empty($user))			{				if(set_value('code') != '' && set_value('discount') > 0 && set_value('discount') <= 100)				{					$id = $this->Admin_mo->set('coupons', array('user'=>$user->id,'code'=>set_value('code'),'discount'=>set_value('discount'),'time'=>''));					if(empty($id))					{						$_SESSION['time'] = time(); $_SESSION['message'] = 'somthingwrong';					}					else					{						$this->Admin_mo->set('notifications', array('type'=>'coupon','user'=>$this->session->userdata('uid'),'target'=>$user->id,'action'=>'لقد حصلت على خصم من حساب رقم '.$user2->code.' تضغط على http://nozol.com/coupon_active/'.set_value('code').' للتفعيل','time'=>time()));						$_SESSION['time'] = time(); $_SESSION['message'] = 'success';					}				}				else				{					$_SESSION['time'] = time(); $_SESSION['message'] = 'inputnotcorrect';				}				redirect('users/customers', 'refresh');			}			else			{				$data['title'] = 'customers';				$data['admessage'] = 'youhavenoprivls';				$data['system'] = $this->mysystem;				$this->lang->load($this->loginuser->lang, $this->loginuser->lang);				$this->config->set_item('language', $this->loginuser->lang);				$this->load->view('headers/customers',$data);				$this->load->view('sidemenu',$data);				$this->load->view('topmenu',$data);				$this->load->view('admin/messages',$data);				$this->load->view('footers/customers');				$this->load->view('messages');			}		}		else		{			$data['title'] = 'customers';			$data['admessage'] = 'youhavenoprivls';			$data['system'] = $this->mysystem;			$this->lang->load($this->loginuser->lang, $this->loginuser->lang);			$this->config->set_item('language', $this->loginuser->lang);			$this->load->view('headers/customers',$data);			$this->load->view('sidemenu',$data);			$this->load->view('topmenu',$data);			$this->load->view('admin/messages',$data);			$this->load->view('footers/customers');			$this->load->view('messages');		}		}		else		{			$data['title'] = 'customers';			$data['admessage'] = 'youhavenoprivls';			$data['system'] = $this->mysystem;			$this->lang->load($this->loginuser->lang, $this->loginuser->lang);			$this->config->set_item('language', $this->loginuser->lang);			$this->load->view('headers/customers',$data);			$this->load->view('sidemenu',$data);			$this->load->view('topmenu',$data);			$this->load->view('admin/messages',$data);			$this->load->view('footers/customers');			$this->load->view('messages');		}	}	public function name_validation()	{		if($_POST['val'] != '' && $_POST['val'] != ' ')		{			 			if(!preg_match('/[^0-9 ]/',$_POST['val'])) echo 5;			//elseif(strlen($_POST['val']) < 5) echo 2;			elseif(strlen($_POST['val']) > 255) echo 3;			else echo 1;		}		else echo 0;	}	public function email_validation()	{		if($_POST['val'] != '' && $_POST['val'] != ' ')		{			if(isset($_POST['id']) && $_POST['id'] != '') $where = 'id <> '.$_POST['id'].' and';			else $where = '';						if(filter_var($_POST['val'], FILTER_VALIDATE_EMAIL) === false) echo 2;			elseif($this->Admin_mo->exist('users','where '.$where.' email like "'.$_POST['val'].'"','')) echo 4;			else echo 1;		}		else echo 0;	}		public function password_validation()	{		if($_POST['val1'] != '')		{			if(strlen($_POST['val1']) < 6) echo 2;			elseif(strlen($_POST['val1']) > 255) echo 3;			elseif($_POST['val2'] != '' && $_POST['val2'] != ' ' && $_POST['val1'] != $_POST['val2']) echo 4;			elseif($_POST['val2'] != '' && $_POST['val2'] != ' ' && $_POST['val1'] == $_POST['val2']) echo 5;			else echo 1;		}		else echo 0;	}		public function cnfpassword_validation()	{		if($_POST['val1'] != '' && $_POST['val2'] != '')		{			if($_POST['val1'] != $_POST['val2']) echo 4;			else echo 1;		}		else echo 0;	}		public function username_validation()	{		if($_POST['val'] != '' && $_POST['val'] != ' ')		{			if(isset($_POST['id']) && $_POST['id'] != '') $where = 'id <> '.$_POST['id'].' and';			else $where = '';						if(preg_match('/[^a-z]/',$_POST['val'])) echo 2;			elseif(strlen($_POST['val']) < 5) echo 3;			elseif(strlen($_POST['val']) >= 255) echo 5;			elseif($this->Admin_mo->exist('users','where '.$where.' username like "'.$_POST['val'].'"','')) echo 4;			else echo 1;		}		else echo 0;	}	public function add()	{		if(strpos($this->loginuser->privileges, ',uadd,') !== false && in_array('U',$this->sections))		{		$data['admessage'] = '';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$data['usertypes'] = $this->Admin_mo->getwhere('usertypes',array('active'=>'1','id != '=>'1'));		$data['langs'] = $this->Admin_mo->getwhere('langs',array('active'=>'1'));						$employees = $this->Admin_mo->get('users'); 						$this->load->view('headers/user-add',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/user-add',$data);		$this->load->view('footers/user-add',$data);		$this->load->view('messages');		}		else		{		$data['title'] = 'users';		$data['admessage'] = 'youhavenoprivls';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$this->load->view('headers/users',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/messages',$data);		$this->load->view('footers/users');		$this->load->view('messages');		}	}		public function create()	{		if(strpos($this->loginuser->privileges, ',uadd,') !== false && in_array('U',$this->sections))		{		    $this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$this->form_validation->set_error_delimiters('<div class="alert alert-danger alert-dismissible fade in" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>', '</div>');		$this->form_validation->set_rules('username', 'lang:username' , 'trim|alpha|required|max_length[255]|is_unique[users.username]');		$this->form_validation->set_rules('fname', 'lang:fname' , 'trim|required|max_length[255]');		$this->form_validation->set_rules('email', 'lang:email' , 'trim|required|max_length[255]|valid_email|is_unique[users.email]');		$this->form_validation->set_rules('password', 'lang:password', 'trim|required|min_length[6]|max_length[255]');		$this->form_validation->set_rules('cnfpassword', 'lang:cnfpassword', 'trim|required|matches[password]');		$this->form_validation->set_rules('mobile', 'lang:mobile' , 'trim|max_length[50]|numeric');		$this->form_validation->set_rules('address', 'lang:address' , 'trim|max_length[255]');		$this->form_validation->set_rules('usertype', 'lang:usertype' , 'trim|required');		$this->form_validation->set_rules('lang', 'lang:lang' , 'trim|required');		if($this->form_validation->run() == FALSE)		{			//$data['admessage'] = 'validation error';			//$_SESSION['time'] = time(); $_SESSION['message'] = 'inputnotcorrect';			$data['title'] = 'users';			$data['system'] = $this->mysystem;			$data['usertypes'] = $this->Admin_mo->getwhere('usertypes',array('active'=>'1','id != '=>'1'));			$data['langs'] = $this->Admin_mo->getwhere('langs',array('active'=>'1'));									$this->load->view('headers/user-add',$data);			$this->load->view('sidemenu',$data);			$this->load->view('topmenu',$data);			$this->load->view('admin/user-add',$data);			$this->load->view('footers/user-add',$data);			$this->load->view('messages');		}		else		{			$set_arr = array('uid'=>$this->session->userdata('uid'), 'code'=>mt_rand(11111,99999), 'username'=>set_value('username'), 'fname'=>set_value('fname'), 'lname'=>set_value('lname'), 'email'=>set_value('email'), 'password'=>password_hash(set_value('password'), PASSWORD_BCRYPT, array('cost'=>10)), 'utid'=>set_value('usertype'), 'lang'=>set_value('lang'), 'mobile'=>set_value('mobile'), 'active'=>set_value('active'), 'time'=>time());			$uid = $this->Admin_mo->set('users', $set_arr);			if(empty($uid))			{				$data['admessage'] = 'Not Saved';				$_SESSION['time'] = time(); $_SESSION['message'] = 'somthingwrong';				redirect('users/add', 'refresh');			}			else			{				$data['admessage'] = 'Successfully Saved';				$_SESSION['time'] = time(); $_SESSION['message'] = 'success';				redirect('users', 'refresh');			}		}		//redirect('users/add', 'refresh');		}		else		{		$data['title'] = 'users';		$data['admessage'] = 'youhavenoprivls';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$this->load->view('headers/users',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/messages',$data);		$this->load->view('footers/users');		$this->load->view('messages');		}	}		public function edit($id)	{		if(strpos($this->loginuser->privileges, ',uedit,') !== false && in_array('U',$this->sections))		{		$data['admessage'] = '';		$id = abs((int)($id));		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$data['usertypes'] = $this->Admin_mo->getwhere('usertypes',array('active'=>'1','id != '=>'1'));		$data['langs'] = $this->Admin_mo->getwhere('langs',array('active'=>'1'));		$data['user'] = $this->Admin_mo->getrow('users',array('id'=>$id));		if(!empty($data['user']))		{						$this->load->view('headers/user-edit',$data);			$this->load->view('sidemenu',$data);			$this->load->view('topmenu',$data);			$this->load->view('admin/user-edit',$data);			$this->load->view('footers/user-edit');			$this->load->view('messages');		}		else		{			$data['title'] = 'users';			$data['admessage'] = 'youhavenoprivls';			$this->load->view('headers/users',$data);			$this->load->view('sidemenu',$data);			$this->load->view('topmenu',$data);			$this->load->view('admin/messages',$data);			$this->load->view('footers/users');			$this->load->view('messages');		}		}		else		{		$data['title'] = 'users';		$data['admessage'] = 'youhavenoprivls';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$this->load->view('headers/users',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/messages',$data);		$this->load->view('footers/users');		$this->load->view('messages');		}	}		public function edituser($id)	{		if(strpos($this->loginuser->privileges, ',uedit,') !== false && in_array('U',$this->sections))		{		$id = abs((int)($id));		if($id != '')		{		    $this->lang->load($this->loginuser->lang, $this->loginuser->lang);			$this->config->set_item('language', $this->loginuser->lang);			$this->form_validation->set_error_delimiters('<div class="alert alert-danger alert-dismissible fade in" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>', '</div>');			$this->form_validation->set_rules('username', 'lang:username' , 'trim|alpha|required|max_length[255]');			$this->form_validation->set_rules('fname', 'lang:fname' , 'trim|required|max_length[255]');			$this->form_validation->set_rules('email', 'lang:email' , 'trim|required|max_length[255]|valid_email');			$this->form_validation->set_rules('password', 'lang:password', 'trim|min_length[6]|max_length[255]');			$this->form_validation->set_rules('cnfpassword', 'lang:cnfpassword', 'trim|matches[password]');			$this->form_validation->set_rules('mobile', 'lang:mobile' , 'trim|max_length[50]|numeric');			$this->form_validation->set_rules('usertype', 'lang:usertype' , 'trim|required');			$this->form_validation->set_rules('lang', 'lang:lang' , 'trim|required');			if($this->form_validation->run() == FALSE)			{				//$data['admessage'] = 'validation error';				//$_SESSION['time'] = time(); $_SESSION['message'] = 'inputnotcorrect';				$data['system'] = $this->mysystem;				$data['usertypes'] = $this->Admin_mo->getwhere('usertypes',array('active'=>'1','id != '=>'1'));				$data['langs'] = $this->Admin_mo->getwhere('langs',array('active'=>'1'));				$data['user'] = $this->Admin_mo->getrow('users',array('id'=>$id));															$this->load->view('headers/user-edit',$data);				$this->load->view('sidemenu',$data);				$this->load->view('topmenu',$data);				$this->load->view('admin/user-edit',$data);				$this->load->view('footers/user-edit');				$this->load->view('messages');			}			else			{				if($this->Admin_mo->exist('users','where id <> '.$id.' and username like "'.set_value('username').'"',''))				{					$_SESSION['time'] = time(); $_SESSION['message'] = 'usernameexist';					redirect('users/edit/'.$id, 'refresh');				}				if($this->Admin_mo->exist('users','where id <> '.$id.' and email like "'.set_value('email').'"',''))				{					$_SESSION['time'] = time(); $_SESSION['message'] = 'emailexist';					redirect('users/edit/'.$id, 'refresh');				}				else				{					$update_array = array('uid'=>$this->session->userdata('uid'), 'username'=>set_value('username'), 'fname'=>set_value('fname'), 'lname'=>set_value('lname'), 'email'=>set_value('email'), 'utid'=>set_value('usertype'), 'lang'=>set_value('lang'), 'mobile'=>set_value('mobile'), 'active'=>set_value('active'), 'time'=>time());					if(set_value('password') != '' && set_value('password') != ' ')  $update_array['password'] = password_hash(set_value('password'), PASSWORD_BCRYPT, array('cost'=>10));					if($this->Admin_mo->update('users', $update_array, array('id'=>$id)))					{						$_SESSION['time'] = time(); $_SESSION['message'] = 'success';					}					else					{						$_SESSION['time'] = time(); $_SESSION['message'] = 'somthingwrong';					}					redirect('users', 'refresh');				}			}		}		else		{			$_SESSION['time'] = time(); $_SESSION['message'] = 'somthingwrong';			redirect('users', 'refresh');		}		//redirect('users', 'refresh');		}		else		{		$data['title'] = 'users';		$data['admessage'] = 'youhavenoprivls';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$this->load->view('headers/users',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/messages',$data);		$this->load->view('footers/users');		$this->load->view('messages');		}	}	public function del($id)	{		$id = abs((int)($id));		if(strpos($this->loginuser->privileges, ',udelete,') !== false && $id != '1' && in_array('U',$this->sections))		{		$user = $this->Admin_mo->getrow('users', array('id'=>$id));		if(!empty($user))		{			if($user->img != '' && file_exists($this->config->item('users_folder').$user->img)) unlink($this->config->item('users_folder').$user->img);			if(file_exists($this->config->item('users_thumb_folder').$user->img)) unlink($this->config->item('users_thumb_folder').$user->img);			$this->Admin_mo->del('users', array('id'=>$id));			$_SESSION['time'] = time(); $_SESSION['message'] = 'success';			redirect('users', 'refresh');		}		else		{			$data['title'] = 'users';			$data['admessage'] = 'youhavenoprivls';			$data['system'] = $this->mysystem;			$this->lang->load($this->loginuser->lang, $this->loginuser->lang);			$this->config->set_item('language', $this->loginuser->lang);			$this->load->view('headers/users',$data);			$this->load->view('sidemenu',$data);			$this->load->view('topmenu',$data);			$this->load->view('admin/messages',$data);			$this->load->view('footers/users');			$this->load->view('messages');		}		}		else		{		$data['title'] = 'users';		$data['admessage'] = 'youhavenoprivls';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$this->load->view('headers/users',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/messages',$data);		$this->load->view('footers/users');		$this->load->view('messages');		}	}			public function imageSize()	{		if ($_FILES['logo']['size'] > 1024000)		{			//$this->form_validation->set_message('imageSize', 'يجب ان يكون حجم الصورة 1 ميجا او اقل');			return FALSE;		}		else		{			return TRUE;		}	}		public function imageType()	{		if (!in_array(strtoupper(pathinfo($_FILES['logo']['name'], PATHINFO_EXTENSION)),array('JPG','JPEG','PNG','JIF','BMP','TIF')))		{			//$this->form_validation->set_message('imageType', 'يجب ان يكون نوع الملف المرفوع واحد من هذه الانواع : JPG,JPEG,PNG,JIF,BMP,TIF');			return FALSE;		}		else		{			return TRUE;		}	}		public function uploadimg($inputfilename,$image_director,$image_director_thumb,$newname)	{		$file_extn = pathinfo($_FILES[$inputfilename]['name'], PATHINFO_EXTENSION);		if(!is_dir($image_director)) $create_image_director = mkdir($image_director);		$name = $newname.".".$file_extn;		if(move_uploaded_file($_FILES[$inputfilename]["tmp_name"], $image_director.$name))		{			if($image_director_thumb != '')			{				$this->load->library('Resize');				$this->resize->construct($image_director.$name);				$this->resize->resizeImage(210, 210, 'exact');				$this->resize->saveImage($image_director_thumb.$name, 100);			}			return $name;		}		else return '';	}}